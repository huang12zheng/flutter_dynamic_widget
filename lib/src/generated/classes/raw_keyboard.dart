import '../base.dart';

class RawKeyboardBase extends BaseWidget {
    RawKeyboardBase();

    factory RawKeyboardBase.fromJson(Map<String, dynamic> data) {
        return RawKeyboardBase();
    }

    @override
    String get description => r"""
An interface for listening to raw key events.

Raw key events pass through as much information as possible from the
underlying platform's key events, which makes them provide a high level of
fidelity but a low level of portability.

A [RawKeyboard] is useful for listening to raw key events and hardware
buttons that are represented as keys. Typically used by games and other apps
that use keyboards for purposes other than text entry.

These key events are typically only key events generated by a hardware
keyboard, and not those from software keyboards or input method editors.

See also:

 * [RawKeyDownEvent] and [RawKeyUpEvent], the classes used to describe
   specific raw key events.
 * [RawKeyboardListener], a widget that listens for raw key events.
 * [SystemChannels.keyEvent], the low-level channel used for receiving
   events from the system.
""";

    @override
    Map<String, dynamic> toJson() {
        return {};
    }

    @override
    Widget render(BuildContext context) {
        return Container();
    }
}