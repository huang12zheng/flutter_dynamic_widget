{
  "file": {
    "name": null,
    "imports": [
      "dart:math",
      "package:flutter/rendering.dart",
      "package:flutter/services.dart",
      "package:flutter/widgets.dart",
      "../app_bar.dart",
      "../back_button.dart",
      "../button_theme.dart",
      "../color_scheme.dart",
      "../debug.dart",
      "../dialog.dart",
      "../dialog_theme.dart",
      "../icon_button.dart",
      "../icons.dart",
      "../material_localizations.dart",
      "../scaffold.dart",
      "../text_button.dart",
      "../text_theme.dart",
      "../theme.dart",
      "calendar_date_range_picker.dart",
      "date_picker_common.dart",
      "date_picker_header.dart",
      "date_utils.dart",
      "input_date_range_picker.dart"
    ],
    "classes": [
      {
        "name": "_DateRangePickerDialog",
        "comments": [],
        "fields": [
          {
            "name": "initialDateRange",
            "type": "DateTimeRange"
          },
          {
            "name": "firstDate",
            "type": "DateTime"
          },
          {
            "name": "lastDate",
            "type": "DateTime"
          },
          {
            "name": "currentDate",
            "type": "DateTime"
          },
          {
            "name": "initialEntryMode",
            "type": "DatePickerEntryMode"
          },
          {
            "name": "cancelText",
            "type": "String"
          },
          {
            "name": "confirmText",
            "type": "String"
          },
          {
            "name": "saveText",
            "type": "String"
          },
          {
            "name": "helpText",
            "type": "String"
          },
          {
            "name": "errorInvalidRangeText",
            "type": "String"
          },
          {
            "name": "errorFormatText",
            "type": "String"
          },
          {
            "name": "errorInvalidText",
            "type": "String"
          },
          {
            "name": "fieldStartHintText",
            "type": "String"
          },
          {
            "name": "fieldEndHintText",
            "type": "String"
          },
          {
            "name": "fieldStartLabelText",
            "type": "String"
          },
          {
            "name": "fieldEndLabelText",
            "type": "String"
          }
        ],
        "constructors": [
          {
            "name": "_DateRangePickerDialog",
            "properties": [
              {
                "value": null,
                "name": "key",
                "type": "Key",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "initialDateRange",
                "type": "DateTimeRange",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "firstDate",
                "type": "DateTime",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "lastDate",
                "type": "DateTime",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "currentDate",
                "type": "DateTime",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "initialEntryMode",
                "type": "DatePickerEntryMode",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "helpText",
                "type": "String",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "cancelText",
                "type": "String",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "confirmText",
                "type": "String",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "saveText",
                "type": "String",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "errorInvalidRangeText",
                "type": "String",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "errorFormatText",
                "type": "String",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "errorInvalidText",
                "type": "String",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "fieldStartHintText",
                "type": "String",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "fieldEndHintText",
                "type": "String",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "fieldStartLabelText",
                "type": "String",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "fieldEndLabelText",
                "type": "String",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              }
            ]
          }
        ],
        "methods": [
          {
            "name": "createState",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "_DateRangePickerDialogState"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                }
              ]
            },
            "parameters": []
          }
        ],
        "tree": null
      },
      {
        "name": "_DateRangePickerDialogState",
        "comments": [],
        "fields": [
          {
            "name": "_entryMode",
            "type": "DatePickerEntryMode"
          },
          {
            "name": "_selectedStart",
            "type": "DateTime"
          },
          {
            "name": "_selectedEnd",
            "type": "DateTime"
          },
          {
            "name": "_autoValidate",
            "type": "bool"
          },
          {
            "name": "_calendarPickerKey",
            "type": "GlobalKey"
          },
          {
            "name": "_inputPickerKey",
            "type": "GlobalKey<InputDateRangePickerState>"
          }
        ],
        "constructors": [],
        "methods": [
          {
            "name": "initState",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "void"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": []
                    }
                  ]
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "_handleOk",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "void"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": [
                        {
                          "name": "if",
                          "values": [
                            {
                              "name": "binary",
                              "left": {
                                "name": "name",
                                "props": {
                                  "0": "_entryMode"
                                }
                              },
                              "right": null,
                              "operation": "=="
                            },
                            {
                              "name": "block",
                              "values": [
                                {
                                  "name": "if",
                                  "values": [
                                    {
                                      "name": "block",
                                      "values": [
                                        {
                                          "name": "return",
                                          "values": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "_handleCancel",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "void"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": []
                    }
                  ]
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "_handleEntryModeToggle",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "void"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": []
                    }
                  ]
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "_handleStartDateChanged",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "void"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": []
                    }
                  ]
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "_handleEndDateChanged",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "void"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": []
                    }
                  ]
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "_hasSelectedDateRange",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "bool"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "build",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "Widget"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": [
                        {
                          "name": "return",
                          "values": [
                            {
                              "name": "constructor",
                              "value": "Dialog",
                              "arguments": {
                                "child": {
                                  "name": "constructor",
                                  "value": "AnimatedContainer",
                                  "arguments": {
                                    "width": null,
                                    "height": null,
                                    "duration": {
                                      "name": "name",
                                      "props": {
                                        "0": "_dialogSizeAnimationDuration"
                                      }
                                    },
                                    "curve": null,
                                    "child": {
                                      "name": "constructor",
                                      "value": "MediaQuery",
                                      "arguments": {
                                        "data": {
                                          "name": "constructor",
                                          "value": "copyWith",
                                          "arguments": {
                                            "textScaleFactor": {
                                              "name": "name",
                                              "props": {
                                                "0": "textScaleFactor"
                                              }
                                            }
                                          }
                                        },
                                        "child": {
                                          "name": "constructor",
                                          "value": "Builder",
                                          "arguments": {
                                            "builder": {
                                              "name": "function",
                                              "values": [
                                                {
                                                  "name": "block_body",
                                                  "values": [
                                                    {
                                                      "name": "block",
                                                      "values": [
                                                        {
                                                          "name": "return",
                                                          "values": [
                                                            {
                                                              "name": "name",
                                                              "props": {
                                                                "0": "contents"
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "insetPadding": {
                                  "name": "name",
                                  "props": {
                                    "0": "insetPadding"
                                  }
                                },
                                "shape": {
                                  "name": "name",
                                  "props": {
                                    "0": "shape"
                                  }
                                },
                                "elevation": {
                                  "name": "name",
                                  "props": {
                                    "0": "elevation"
                                  }
                                },
                                "clipBehavior": null
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "parameters": []
          }
        ]
      },
      {
        "name": "_CalendarRangePickerDialog",
        "comments": [],
        "fields": [
          {
            "name": "selectedStartDate",
            "type": "DateTime"
          },
          {
            "name": "selectedEndDate",
            "type": "DateTime"
          },
          {
            "name": "firstDate",
            "type": "DateTime"
          },
          {
            "name": "lastDate",
            "type": "DateTime"
          },
          {
            "name": "currentDate",
            "type": "DateTime"
          },
          {
            "name": "onStartDateChanged",
            "type": "ValueChanged<DateTime>"
          },
          {
            "name": "onEndDateChanged",
            "type": "ValueChanged<DateTime>"
          },
          {
            "name": "onConfirm",
            "type": "VoidCallback"
          },
          {
            "name": "onCancel",
            "type": "VoidCallback"
          },
          {
            "name": "onToggleEntryMode",
            "type": "VoidCallback"
          },
          {
            "name": "confirmText",
            "type": "String"
          },
          {
            "name": "helpText",
            "type": "String"
          }
        ],
        "constructors": [
          {
            "name": "_CalendarRangePickerDialog",
            "properties": [
              {
                "value": null,
                "name": "key",
                "type": "Key",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "selectedStartDate",
                "type": "DateTime",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "selectedEndDate",
                "type": "DateTime",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "firstDate",
                "type": "DateTime",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "lastDate",
                "type": "DateTime",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "currentDate",
                "type": "DateTime",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "onStartDateChanged",
                "type": "ValueChanged<DateTime>",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "onEndDateChanged",
                "type": "ValueChanged<DateTime>",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "onConfirm",
                "type": "VoidCallback",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "onCancel",
                "type": "VoidCallback",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "onToggleEntryMode",
                "type": "VoidCallback",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "confirmText",
                "type": "String",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "helpText",
                "type": "String",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              }
            ]
          }
        ],
        "methods": [
          {
            "name": "build",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "Widget"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": [
                        {
                          "name": "return",
                          "values": [
                            {
                              "name": "constructor",
                              "value": "SafeArea",
                              "arguments": {
                                "top": {
                                  "name": "value",
                                  "props": {
                                    "0": {
                                      "type": "bool",
                                      "value": "false"
                                    }
                                  }
                                },
                                "left": {
                                  "name": "value",
                                  "props": {
                                    "0": {
                                      "type": "bool",
                                      "value": "false"
                                    }
                                  }
                                },
                                "right": {
                                  "name": "value",
                                  "props": {
                                    "0": {
                                      "type": "bool",
                                      "value": "false"
                                    }
                                  }
                                },
                                "child": {
                                  "name": "constructor",
                                  "value": "Scaffold",
                                  "arguments": {
                                    "appBar": {
                                      "name": "constructor",
                                      "value": "AppBar",
                                      "arguments": {
                                        "leading": {
                                          "name": "constructor",
                                          "value": "CloseButton",
                                          "arguments": {
                                            "onPressed": {
                                              "name": "name",
                                              "props": {
                                                "0": "onCancel"
                                              }
                                            }
                                          }
                                        },
                                        "actions": {
                                          "name": "value",
                                          "props": {
                                            "0": {
                                              "type": "List",
                                              "value": "<Widget>[if (orientation == Orientation.landscape) entryModeIcon, ButtonTheme(minWidth: 64, child: TextButton(onPressed: onConfirm, child: Text(confirmText, style: saveButtonStyle))), const SizedBox(width: 8)]"
                                            }
                                          }
                                        },
                                        "bottom": {
                                          "name": "constructor",
                                          "value": "PreferredSize",
                                          "arguments": {
                                            "child": {
                                              "name": "constructor",
                                              "value": "Row",
                                              "arguments": {
                                                "children": {
                                                  "name": "value",
                                                  "props": {
                                                    "0": {
                                                      "type": "List",
                                                      "value": "<Widget>[SizedBox(width: MediaQuery.of(context).size.width < 360 ? 42 : 72), Expanded(child: Semantics(label: '$helpText $startDateText to $endDateText', excludeSemantics: true, child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: <Widget>[Text(helpText, style: textTheme.overline.apply(color: headerForeground)), const SizedBox(height: 8), Row(children: <Widget>[Text(startDateText, style: startDateStyle, maxLines: 1, overflow: TextOverflow.ellipsis), Text(' – ', style: startDateStyle), Flexible(child: Text(endDateText, style: endDateStyle, maxLines: 1, overflow: TextOverflow.ellipsis))]), const SizedBox(height: 16)]))), if (orientation == Orientation.portrait) Padding(padding: const EdgeInsets.symmetric(horizontal: 8.0), child: entryModeIcon)]"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "preferredSize": null
                                          }
                                        }
                                      }
                                    },
                                    "body": {
                                      "name": "constructor",
                                      "value": "CalendarDateRangePicker",
                                      "arguments": {
                                        "initialStartDate": {
                                          "name": "name",
                                          "props": {
                                            "0": "selectedStartDate"
                                          }
                                        },
                                        "initialEndDate": {
                                          "name": "name",
                                          "props": {
                                            "0": "selectedEndDate"
                                          }
                                        },
                                        "firstDate": {
                                          "name": "name",
                                          "props": {
                                            "0": "firstDate"
                                          }
                                        },
                                        "lastDate": {
                                          "name": "name",
                                          "props": {
                                            "0": "lastDate"
                                          }
                                        },
                                        "currentDate": {
                                          "name": "name",
                                          "props": {
                                            "0": "currentDate"
                                          }
                                        },
                                        "onStartDateChanged": {
                                          "name": "name",
                                          "props": {
                                            "0": "onStartDateChanged"
                                          }
                                        },
                                        "onEndDateChanged": {
                                          "name": "name",
                                          "props": {
                                            "0": "onEndDateChanged"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "parameters": []
          }
        ],
        "tree": {
          "name": null,
          "body": {
            "name": "block_body",
            "values": [
              {
                "name": "block",
                "values": [
                  {
                    "name": "return",
                    "values": [
                      {
                        "name": "constructor",
                        "value": "SafeArea",
                        "arguments": {
                          "top": {
                            "name": "value",
                            "props": {
                              "0": {
                                "type": "bool",
                                "value": "false"
                              }
                            }
                          },
                          "left": {
                            "name": "value",
                            "props": {
                              "0": {
                                "type": "bool",
                                "value": "false"
                              }
                            }
                          },
                          "right": {
                            "name": "value",
                            "props": {
                              "0": {
                                "type": "bool",
                                "value": "false"
                              }
                            }
                          },
                          "child": {
                            "name": "constructor",
                            "value": "Scaffold",
                            "arguments": {
                              "appBar": {
                                "name": "constructor",
                                "value": "AppBar",
                                "arguments": {
                                  "leading": {
                                    "name": "constructor",
                                    "value": "CloseButton",
                                    "arguments": {
                                      "onPressed": {
                                        "name": "name",
                                        "props": {
                                          "0": "onCancel"
                                        }
                                      }
                                    }
                                  },
                                  "actions": {
                                    "name": "value",
                                    "props": {
                                      "0": {
                                        "type": "List",
                                        "value": "<Widget>[if (orientation == Orientation.landscape) entryModeIcon, ButtonTheme(minWidth: 64, child: TextButton(onPressed: onConfirm, child: Text(confirmText, style: saveButtonStyle))), const SizedBox(width: 8)]"
                                      }
                                    }
                                  },
                                  "bottom": {
                                    "name": "constructor",
                                    "value": "PreferredSize",
                                    "arguments": {
                                      "child": {
                                        "name": "constructor",
                                        "value": "Row",
                                        "arguments": {
                                          "children": {
                                            "name": "value",
                                            "props": {
                                              "0": {
                                                "type": "List",
                                                "value": "<Widget>[SizedBox(width: MediaQuery.of(context).size.width < 360 ? 42 : 72), Expanded(child: Semantics(label: '$helpText $startDateText to $endDateText', excludeSemantics: true, child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: <Widget>[Text(helpText, style: textTheme.overline.apply(color: headerForeground)), const SizedBox(height: 8), Row(children: <Widget>[Text(startDateText, style: startDateStyle, maxLines: 1, overflow: TextOverflow.ellipsis), Text(' – ', style: startDateStyle), Flexible(child: Text(endDateText, style: endDateStyle, maxLines: 1, overflow: TextOverflow.ellipsis))]), const SizedBox(height: 16)]))), if (orientation == Orientation.portrait) Padding(padding: const EdgeInsets.symmetric(horizontal: 8.0), child: entryModeIcon)]"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "preferredSize": null
                                    }
                                  }
                                }
                              },
                              "body": {
                                "name": "constructor",
                                "value": "CalendarDateRangePicker",
                                "arguments": {
                                  "initialStartDate": {
                                    "name": "name",
                                    "props": {
                                      "0": "selectedStartDate"
                                    }
                                  },
                                  "initialEndDate": {
                                    "name": "name",
                                    "props": {
                                      "0": "selectedEndDate"
                                    }
                                  },
                                  "firstDate": {
                                    "name": "name",
                                    "props": {
                                      "0": "firstDate"
                                    }
                                  },
                                  "lastDate": {
                                    "name": "name",
                                    "props": {
                                      "0": "lastDate"
                                    }
                                  },
                                  "currentDate": {
                                    "name": "name",
                                    "props": {
                                      "0": "currentDate"
                                    }
                                  },
                                  "onStartDateChanged": {
                                    "name": "name",
                                    "props": {
                                      "0": "onStartDateChanged"
                                    }
                                  },
                                  "onEndDateChanged": {
                                    "name": "name",
                                    "props": {
                                      "0": "onEndDateChanged"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "parameters": []
        }
      },
      {
        "name": "_InputDateRangePickerDialog",
        "comments": [],
        "fields": [
          {
            "name": "selectedStartDate",
            "type": "DateTime"
          },
          {
            "name": "selectedEndDate",
            "type": "DateTime"
          },
          {
            "name": "currentDate",
            "type": "DateTime"
          },
          {
            "name": "picker",
            "type": "Widget"
          },
          {
            "name": "onConfirm",
            "type": "VoidCallback"
          },
          {
            "name": "onCancel",
            "type": "VoidCallback"
          },
          {
            "name": "onToggleEntryMode",
            "type": "VoidCallback"
          },
          {
            "name": "confirmText",
            "type": "String"
          },
          {
            "name": "cancelText",
            "type": "String"
          },
          {
            "name": "helpText",
            "type": "String"
          }
        ],
        "constructors": [
          {
            "name": "_InputDateRangePickerDialog",
            "properties": [
              {
                "value": null,
                "name": "key",
                "type": "Key",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "selectedStartDate",
                "type": "DateTime",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "selectedEndDate",
                "type": "DateTime",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "currentDate",
                "type": "DateTime",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "picker",
                "type": "Widget",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "onConfirm",
                "type": "VoidCallback",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "onCancel",
                "type": "VoidCallback",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "onToggleEntryMode",
                "type": "VoidCallback",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "confirmText",
                "type": "String",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "cancelText",
                "type": "String",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "helpText",
                "type": "String",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              }
            ]
          }
        ],
        "methods": [
          {
            "name": "_formatDateRange",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "String"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": [
                        {
                          "name": "if",
                          "values": [
                            {
                              "name": "binary",
                              "left": {
                                "name": "binary",
                                "left": {
                                  "name": "name",
                                  "props": {
                                    "0": "start"
                                  }
                                },
                                "right": {
                                  "name": "value",
                                  "props": {
                                    "0": {
                                      "type": null,
                                      "value": "null"
                                    }
                                  }
                                },
                                "operation": "=="
                              },
                              "right": {
                                "name": "binary",
                                "left": {
                                  "name": "name",
                                  "props": {
                                    "0": "end"
                                  }
                                },
                                "right": {
                                  "name": "value",
                                  "props": {
                                    "0": {
                                      "type": null,
                                      "value": "null"
                                    }
                                  }
                                },
                                "operation": "=="
                              },
                              "operation": "||"
                            },
                            {
                              "name": "block",
                              "values": [
                                {
                                  "name": "return",
                                  "values": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "name": "if",
                          "values": [
                            {
                              "name": "binary",
                              "left": {
                                "name": "constructor",
                                "value": "of",
                                "arguments": {}
                              },
                              "right": null,
                              "operation": "=="
                            },
                            {
                              "name": "block",
                              "values": [
                                {
                                  "name": "return",
                                  "values": [
                                    {
                                      "name": "value",
                                      "props": {
                                        "0": {
                                          "type": "String",
                                          "value": "null"
                                        }
                                      }
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "name": "block",
                              "values": [
                                {
                                  "name": "return",
                                  "values": [
                                    {
                                      "name": "value",
                                      "props": {
                                        "0": {
                                          "type": "String",
                                          "value": "null"
                                        }
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "build",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "Widget"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": [
                        {
                          "name": "return",
                          "values": [
                            {
                              "name": "value",
                              "props": {
                                "0": {
                                  "type": null,
                                  "value": "null"
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "parameters": []
          }
        ],
        "tree": {
          "name": null,
          "body": {
            "name": "block_body",
            "values": [
              {
                "name": "block",
                "values": [
                  {
                    "name": "return",
                    "values": [
                      {
                        "name": "value",
                        "props": {
                          "0": {
                            "type": null,
                            "value": "null"
                          }
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "parameters": []
        }
      }
    ],
    "enums": [],
    "fields": [
      {
        "name": "_inputPortraitDialogSize",
        "type": "Size"
      },
      {
        "name": "_inputLandscapeDialogSize",
        "type": "Size"
      },
      {
        "name": "_dialogSizeAnimationDuration",
        "type": "Duration"
      },
      {
        "name": "_inputFormPortraitHeight",
        "type": "double"
      },
      {
        "name": "_inputFormLandscapeHeight",
        "type": "double"
      }
    ],
    "methods": [
      {
        "name": "showDateRangePicker",
        "body": {
          "name": "function_declaration",
          "values": [
            {
              "name": "type",
              "props": {
                "0": "Future<DateTimeRange>"
              }
            },
            {
              "name": "declaration",
              "values": []
            },
            {
              "name": "function",
              "values": [
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": [
                        {
                          "name": "if",
                          "values": [
                            {
                              "name": "binary",
                              "left": {
                                "name": "name",
                                "props": {
                                  "0": "textDirection"
                                }
                              },
                              "right": {
                                "name": "value",
                                "props": {
                                  "0": {
                                    "type": null,
                                    "value": "null"
                                  }
                                }
                              },
                              "operation": "!="
                            },
                            {
                              "name": "block",
                              "values": []
                            }
                          ]
                        },
                        {
                          "name": "if",
                          "values": [
                            {
                              "name": "binary",
                              "left": {
                                "name": "name",
                                "props": {
                                  "0": "locale"
                                }
                              },
                              "right": {
                                "name": "value",
                                "props": {
                                  "0": {
                                    "type": null,
                                    "value": "null"
                                  }
                                }
                              },
                              "operation": "!="
                            },
                            {
                              "name": "block",
                              "values": []
                            }
                          ]
                        },
                        {
                          "name": "return",
                          "values": [
                            {
                              "name": "constructor",
                              "value": "showDialog",
                              "arguments": {
                                "context": {
                                  "name": "name",
                                  "props": {
                                    "0": "context"
                                  }
                                },
                                "useRootNavigator": {
                                  "name": "name",
                                  "props": {
                                    "0": "useRootNavigator"
                                  }
                                },
                                "routeSettings": {
                                  "name": "name",
                                  "props": {
                                    "0": "routeSettings"
                                  }
                                },
                                "useSafeArea": {
                                  "name": "value",
                                  "props": {
                                    "0": {
                                      "type": "bool",
                                      "value": "false"
                                    }
                                  }
                                },
                                "builder": {
                                  "name": "function",
                                  "values": [
                                    {
                                      "name": "block_body",
                                      "values": [
                                        {
                                          "name": "block",
                                          "values": [
                                            {
                                              "name": "return",
                                              "values": [
                                                {
                                                  "name": "conditional",
                                                  "values": [
                                                    {
                                                      "name": "binary",
                                                      "left": {
                                                        "name": "name",
                                                        "props": {
                                                          "0": "builder"
                                                        }
                                                      },
                                                      "right": {
                                                        "name": "value",
                                                        "props": {
                                                          "0": {
                                                            "type": null,
                                                            "value": "null"
                                                          }
                                                        }
                                                      },
                                                      "operation": "=="
                                                    },
                                                    {
                                                      "name": "name",
                                                      "props": {
                                                        "0": "dialog"
                                                      }
                                                    },
                                                    {
                                                      "name": "constructor",
                                                      "value": "builder",
                                                      "arguments": {}
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        "parameters": []
      }
    ]
  },
  "errors": []
}