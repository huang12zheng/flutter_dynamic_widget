{
  "file": {
    "name": null,
    "imports": [
      "package:flutter/foundation.dart",
      "package:flutter/widgets.dart",
      "package:flutter/gestures.dart",
      "colors.dart",
      "debug.dart",
      "list_tile.dart",
      "material.dart",
      "material_localizations.dart",
      "theme.dart"
    ],
    "classes": [
      {
        "name": "Drawer",
        "comments": [
          " * <https://material.io/design/components/navigation-drawer.html>"
        ],
        "fields": [
          {
            "name": "elevation",
            "type": "double"
          },
          {
            "name": "child",
            "type": "Widget"
          },
          {
            "name": "semanticLabel",
            "type": "String"
          }
        ],
        "constructors": [
          {
            "name": "Drawer",
            "properties": [
              {
                "value": null,
                "name": "key",
                "type": "Key",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": "16.0",
                "name": "elevation",
                "type": "double",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "child",
                "type": "Widget",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "semanticLabel",
                "type": "String",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              }
            ]
          }
        ],
        "methods": [
          {
            "name": "build",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "Widget"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": [
                        {
                          "name": "return",
                          "values": [
                            {
                              "name": "constructor",
                              "value": "Semantics",
                              "arguments": {
                                "scopesRoute": {
                                  "name": "value",
                                  "props": {
                                    "0": {
                                      "type": "bool",
                                      "value": "true"
                                    }
                                  }
                                },
                                "namesRoute": {
                                  "name": "value",
                                  "props": {
                                    "0": {
                                      "type": "bool",
                                      "value": "true"
                                    }
                                  }
                                },
                                "explicitChildNodes": {
                                  "name": "value",
                                  "props": {
                                    "0": {
                                      "type": "bool",
                                      "value": "true"
                                    }
                                  }
                                },
                                "label": {
                                  "name": "name",
                                  "props": {
                                    "0": "label"
                                  }
                                },
                                "child": {
                                  "name": "constructor",
                                  "value": "ConstrainedBox",
                                  "arguments": {
                                    "constraints": null,
                                    "child": {
                                      "name": "constructor",
                                      "value": "Material",
                                      "arguments": {
                                        "elevation": {
                                          "name": "name",
                                          "props": {
                                            "0": "elevation"
                                          }
                                        },
                                        "child": {
                                          "name": "name",
                                          "props": {
                                            "0": "child"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "parameters": []
          }
        ],
        "tree": {
          "name": null,
          "body": {
            "name": "block_body",
            "values": [
              {
                "name": "block",
                "values": [
                  {
                    "name": "return",
                    "values": [
                      {
                        "name": "constructor",
                        "value": "Semantics",
                        "arguments": {
                          "scopesRoute": {
                            "name": "value",
                            "props": {
                              "0": {
                                "type": "bool",
                                "value": "true"
                              }
                            }
                          },
                          "namesRoute": {
                            "name": "value",
                            "props": {
                              "0": {
                                "type": "bool",
                                "value": "true"
                              }
                            }
                          },
                          "explicitChildNodes": {
                            "name": "value",
                            "props": {
                              "0": {
                                "type": "bool",
                                "value": "true"
                              }
                            }
                          },
                          "label": {
                            "name": "name",
                            "props": {
                              "0": "label"
                            }
                          },
                          "child": {
                            "name": "constructor",
                            "value": "ConstrainedBox",
                            "arguments": {
                              "constraints": null,
                              "child": {
                                "name": "constructor",
                                "value": "Material",
                                "arguments": {
                                  "elevation": {
                                    "name": "name",
                                    "props": {
                                      "0": "elevation"
                                    }
                                  },
                                  "child": {
                                    "name": "name",
                                    "props": {
                                      "0": "child"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "parameters": []
        }
      },
      {
        "name": "DrawerController",
        "comments": [
          " * [Scaffold.drawer], the [Scaffold] slot for showing a drawer."
        ],
        "fields": [
          {
            "name": "child",
            "type": "Widget"
          },
          {
            "name": "alignment",
            "type": "DrawerAlignment"
          },
          {
            "name": "drawerCallback",
            "type": "DrawerCallback"
          },
          {
            "name": "dragStartBehavior",
            "type": "DragStartBehavior"
          },
          {
            "name": "scrimColor",
            "type": "Color"
          },
          {
            "name": "enableOpenDragGesture",
            "type": "bool"
          },
          {
            "name": "edgeDragWidth",
            "type": "double"
          }
        ],
        "constructors": [
          {
            "name": "DrawerController",
            "properties": [
              {
                "value": null,
                "name": "key",
                "type": "GlobalKey",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "child",
                "type": "Widget",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "alignment",
                "type": "DrawerAlignment",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "drawerCallback",
                "type": "DrawerCallback",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "dragStartBehavior",
                "type": "DragStartBehavior",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "scrimColor",
                "type": "Color",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "edgeDragWidth",
                "type": "double",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": "true",
                "name": "enableOpenDragGesture",
                "type": "bool",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              }
            ]
          }
        ],
        "methods": [
          {
            "name": "createState",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "DrawerControllerState"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                }
              ]
            },
            "parameters": []
          }
        ],
        "tree": null
      },
      {
        "name": "DrawerControllerState",
        "comments": [
          "Typically used by a [Scaffold] to [open] and [close] the drawer."
        ],
        "fields": [
          {
            "name": "_historyEntry",
            "type": "LocalHistoryEntry"
          },
          {
            "name": "_focusScopeNode",
            "type": "FocusScopeNode"
          },
          {
            "name": "_controller",
            "type": "AnimationController"
          },
          {
            "name": "_drawerKey",
            "type": "GlobalKey"
          },
          {
            "name": "_previouslyOpened",
            "type": "bool"
          },
          {
            "name": "_scrimColorTween",
            "type": "ColorTween"
          },
          {
            "name": "_gestureDetectorKey",
            "type": "GlobalKey"
          }
        ],
        "constructors": [],
        "methods": [
          {
            "name": "initState",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "void"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": []
                    }
                  ]
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "dispose",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "void"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": []
                    }
                  ]
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "didUpdateWidget",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "void"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": [
                        {
                          "name": "if",
                          "values": [
                            {
                              "name": "binary",
                              "left": null,
                              "right": null,
                              "operation": "!="
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "_animationChanged",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "void"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": []
                    }
                  ]
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "_ensureHistoryEntry",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "void"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": [
                        {
                          "name": "if",
                          "values": [
                            {
                              "name": "binary",
                              "left": {
                                "name": "name",
                                "props": {
                                  "0": "_historyEntry"
                                }
                              },
                              "right": {
                                "name": "value",
                                "props": {
                                  "0": {
                                    "type": null,
                                    "value": "null"
                                  }
                                }
                              },
                              "operation": "=="
                            },
                            {
                              "name": "block",
                              "values": [
                                {
                                  "name": "if",
                                  "values": [
                                    {
                                      "name": "binary",
                                      "left": {
                                        "name": "name",
                                        "props": {
                                          "0": "route"
                                        }
                                      },
                                      "right": {
                                        "name": "value",
                                        "props": {
                                          "0": {
                                            "type": null,
                                            "value": "null"
                                          }
                                        }
                                      },
                                      "operation": "!="
                                    },
                                    {
                                      "name": "block",
                                      "values": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "_animationStatusChanged",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "void"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": []
                    }
                  ]
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "_handleHistoryEntryRemoved",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "void"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": []
                    }
                  ]
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "_handleDragDown",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "void"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": []
                    }
                  ]
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "_handleDragCancel",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "void"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": [
                        {
                          "name": "if",
                          "values": [
                            {
                              "name": "binary",
                              "left": null,
                              "right": null,
                              "operation": "||"
                            },
                            {
                              "name": "return",
                              "values": []
                            }
                          ]
                        },
                        {
                          "name": "if",
                          "values": [
                            {
                              "name": "binary",
                              "left": null,
                              "right": {
                                "name": "value",
                                "props": {
                                  "0": {
                                    "type": "double",
                                    "value": "0.5"
                                  }
                                }
                              },
                              "operation": "<"
                            },
                            {
                              "name": "block",
                              "values": []
                            },
                            {
                              "name": "block",
                              "values": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "_width",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "double"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": [
                        {
                          "name": "if",
                          "values": [
                            {
                              "name": "binary",
                              "left": {
                                "name": "name",
                                "props": {
                                  "0": "box"
                                }
                              },
                              "right": {
                                "name": "value",
                                "props": {
                                  "0": {
                                    "type": null,
                                    "value": "null"
                                  }
                                }
                              },
                              "operation": "!="
                            },
                            {
                              "name": "return",
                              "values": []
                            }
                          ]
                        },
                        {
                          "name": "return",
                          "values": [
                            {
                              "name": "name",
                              "props": {
                                "0": "_kWidth"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "_move",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "void"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": [
                        {
                          "name": "if",
                          "values": [
                            {
                              "name": "binary",
                              "left": {
                                "name": "binary",
                                "left": {
                                  "name": "name",
                                  "props": {
                                    "0": "opened"
                                  }
                                },
                                "right": {
                                  "name": "name",
                                  "props": {
                                    "0": "_previouslyOpened"
                                  }
                                },
                                "operation": "!="
                              },
                              "right": {
                                "name": "binary",
                                "left": null,
                                "right": {
                                  "name": "value",
                                  "props": {
                                    "0": {
                                      "type": null,
                                      "value": "null"
                                    }
                                  }
                                },
                                "operation": "!="
                              },
                              "operation": "&&"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "_settle",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "void"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": [
                        {
                          "name": "if",
                          "values": [
                            {
                              "name": "return",
                              "values": []
                            }
                          ]
                        },
                        {
                          "name": "if",
                          "values": [
                            {
                              "name": "binary",
                              "left": {
                                "name": "constructor",
                                "value": "abs",
                                "arguments": {}
                              },
                              "right": {
                                "name": "name",
                                "props": {
                                  "0": "_kMinFlingVelocity"
                                }
                              },
                              "operation": ">="
                            },
                            {
                              "name": "block",
                              "values": []
                            },
                            {
                              "name": "if",
                              "values": [
                                {
                                  "name": "binary",
                                  "left": null,
                                  "right": {
                                    "name": "value",
                                    "props": {
                                      "0": {
                                        "type": "double",
                                        "value": "0.5"
                                      }
                                    }
                                  },
                                  "operation": "<"
                                },
                                {
                                  "name": "block",
                                  "values": []
                                },
                                {
                                  "name": "block",
                                  "values": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "open",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "void"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": [
                        {
                          "name": "if",
                          "values": [
                            {
                              "name": "binary",
                              "left": null,
                              "right": {
                                "name": "value",
                                "props": {
                                  "0": {
                                    "type": null,
                                    "value": "null"
                                  }
                                }
                              },
                              "operation": "!="
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "close",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "void"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": [
                        {
                          "name": "if",
                          "values": [
                            {
                              "name": "binary",
                              "left": null,
                              "right": {
                                "name": "value",
                                "props": {
                                  "0": {
                                    "type": null,
                                    "value": "null"
                                  }
                                }
                              },
                              "operation": "!="
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "_buildScrimColorTween",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "ColorTween"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": [
                        {
                          "name": "return",
                          "values": [
                            {
                              "name": "constructor",
                              "value": "ColorTween",
                              "arguments": {
                                "begin": null,
                                "end": {
                                  "name": "binary",
                                  "left": null,
                                  "right": null,
                                  "operation": "??"
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "_drawerOuterAlignment",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "AlignmentDirectional"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": [
                        {
                          "name": "return",
                          "values": [
                            {
                              "name": "value",
                              "props": {
                                "0": {
                                  "type": null,
                                  "value": "null"
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "_drawerInnerAlignment",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "AlignmentDirectional"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": [
                        {
                          "name": "return",
                          "values": [
                            {
                              "name": "value",
                              "props": {
                                "0": {
                                  "type": null,
                                  "value": "null"
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "_buildDrawer",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "Widget"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": [
                        {
                          "name": "if",
                          "values": [
                            {
                              "name": "binary",
                              "left": null,
                              "right": {
                                "name": "value",
                                "props": {
                                  "0": {
                                    "type": null,
                                    "value": "null"
                                  }
                                }
                              },
                              "operation": "=="
                            },
                            {
                              "name": "block",
                              "values": []
                            }
                          ]
                        },
                        {
                          "name": "if",
                          "values": [
                            {
                              "name": "binary",
                              "left": null,
                              "right": null,
                              "operation": "=="
                            },
                            {
                              "name": "block",
                              "values": [
                                {
                                  "name": "if",
                                  "values": [
                                    {
                                      "name": "block",
                                      "values": [
                                        {
                                          "name": "return",
                                          "values": [
                                            {
                                              "name": "constructor",
                                              "value": "Align",
                                              "arguments": {
                                                "alignment": {
                                                  "name": "name",
                                                  "props": {
                                                    "0": "_drawerOuterAlignment"
                                                  }
                                                },
                                                "child": {
                                                  "name": "constructor",
                                                  "value": "GestureDetector",
                                                  "arguments": {
                                                    "key": {
                                                      "name": "name",
                                                      "props": {
                                                        "0": "_gestureDetectorKey"
                                                      }
                                                    },
                                                    "onHorizontalDragUpdate": {
                                                      "name": "name",
                                                      "props": {
                                                        "0": "_move"
                                                      }
                                                    },
                                                    "onHorizontalDragEnd": {
                                                      "name": "name",
                                                      "props": {
                                                        "0": "_settle"
                                                      }
                                                    },
                                                    "behavior": null,
                                                    "excludeFromSemantics": {
                                                      "name": "value",
                                                      "props": {
                                                        "0": {
                                                          "type": "bool",
                                                          "value": "true"
                                                        }
                                                      }
                                                    },
                                                    "dragStartBehavior": null,
                                                    "child": {
                                                      "name": "constructor",
                                                      "value": "Container",
                                                      "arguments": {
                                                        "width": {
                                                          "name": "name",
                                                          "props": {
                                                            "0": "dragAreaWidth"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "name": "block",
                                      "values": [
                                        {
                                          "name": "return",
                                          "values": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "name": "block",
                              "values": [
                                {
                                  "name": "return",
                                  "values": [
                                    {
                                      "name": "constructor",
                                      "value": "GestureDetector",
                                      "arguments": {
                                        "key": {
                                          "name": "name",
                                          "props": {
                                            "0": "_gestureDetectorKey"
                                          }
                                        },
                                        "onHorizontalDragDown": {
                                          "name": "name",
                                          "props": {
                                            "0": "_handleDragDown"
                                          }
                                        },
                                        "onHorizontalDragUpdate": {
                                          "name": "name",
                                          "props": {
                                            "0": "_move"
                                          }
                                        },
                                        "onHorizontalDragEnd": {
                                          "name": "name",
                                          "props": {
                                            "0": "_settle"
                                          }
                                        },
                                        "onHorizontalDragCancel": {
                                          "name": "name",
                                          "props": {
                                            "0": "_handleDragCancel"
                                          }
                                        },
                                        "excludeFromSemantics": {
                                          "name": "value",
                                          "props": {
                                            "0": {
                                              "type": "bool",
                                              "value": "true"
                                            }
                                          }
                                        },
                                        "dragStartBehavior": null,
                                        "child": {
                                          "name": "constructor",
                                          "value": "RepaintBoundary",
                                          "arguments": {
                                            "child": {
                                              "name": "constructor",
                                              "value": "Stack",
                                              "arguments": {
                                                "children": {
                                                  "name": "value",
                                                  "props": {
                                                    "0": {
                                                      "type": "List",
                                                      "value": "<Widget>[BlockSemantics(child: ExcludeSemantics(excluding: platformHasBackButton, child: GestureDetector(onTap: close, child: Semantics(label: MaterialLocalizations.of(context)?.modalBarrierDismissLabel, child: MouseRegion(opaque: true, child: Container(color: _scrimColorTween.evaluate(_controller))))))), Align(alignment: _drawerOuterAlignment, child: Align(alignment: _drawerInnerAlignment, widthFactor: _controller.value, child: RepaintBoundary(child: FocusScope(key: _drawerKey, node: _focusScopeNode, child: widget.child))))]"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "build",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "Widget"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": [
                        {
                          "name": "return",
                          "values": [
                            {
                              "name": "constructor",
                              "value": "ListTileTheme",
                              "arguments": {
                                "style": null,
                                "child": {
                                  "name": "constructor",
                                  "value": "_buildDrawer",
                                  "arguments": {}
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "parameters": []
          }
        ]
      }
    ],
    "enums": [
      {
        "name": "DrawerAlignment",
        "values": [
          "start",
          "end"
        ]
      }
    ],
    "fields": [
      {
        "name": "_kWidth",
        "type": "double"
      },
      {
        "name": "_kEdgeDragWidth",
        "type": "double"
      },
      {
        "name": "_kMinFlingVelocity",
        "type": "double"
      },
      {
        "name": "_kBaseSettleDuration",
        "type": "Duration"
      }
    ],
    "methods": []
  },
  "errors": []
}