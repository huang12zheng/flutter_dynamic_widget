{
  "file": {
    "name": null,
    "imports": [
      "package:flutter/widgets.dart",
      "colors.dart",
      "icons.dart",
      "list_tile.dart",
      "theme.dart",
      "theme_data.dart"
    ],
    "classes": [
      {
        "name": "ExpansionTile",
        "comments": [
          "   <https://material.io/guidelines/components/lists-controls.html>."
        ],
        "fields": [
          {
            "name": "leading",
            "type": "Widget"
          },
          {
            "name": "title",
            "type": "Widget"
          },
          {
            "name": "subtitle",
            "type": "Widget"
          },
          {
            "name": "onExpansionChanged",
            "type": "ValueChanged<bool>"
          },
          {
            "name": "children",
            "type": "List<Widget>"
          },
          {
            "name": "backgroundColor",
            "type": "Color"
          },
          {
            "name": "trailing",
            "type": "Widget"
          },
          {
            "name": "initiallyExpanded",
            "type": "bool"
          },
          {
            "name": "maintainState",
            "type": "bool"
          },
          {
            "name": "tilePadding",
            "type": "EdgeInsetsGeometry"
          },
          {
            "name": "expandedAlignment",
            "type": "Alignment"
          },
          {
            "name": "expandedCrossAxisAlignment",
            "type": "CrossAxisAlignment"
          },
          {
            "name": "childrenPadding",
            "type": "EdgeInsetsGeometry"
          }
        ],
        "constructors": [
          {
            "name": "ExpansionTile",
            "properties": [
              {
                "value": null,
                "name": "key",
                "type": "Key",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "leading",
                "type": "Widget",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "title",
                "type": "Widget",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "subtitle",
                "type": "Widget",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "backgroundColor",
                "type": "Color",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "onExpansionChanged",
                "type": "ValueChanged<bool>",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": "const <Widget>[]",
                "name": "children",
                "type": "List<Widget>",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "trailing",
                "type": "Widget",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": "false",
                "name": "initiallyExpanded",
                "type": "bool",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": "false",
                "name": "maintainState",
                "type": "bool",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "tilePadding",
                "type": "EdgeInsetsGeometry",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "expandedCrossAxisAlignment",
                "type": "CrossAxisAlignment",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "expandedAlignment",
                "type": "Alignment",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              },
              {
                "value": null,
                "name": "childrenPadding",
                "type": "EdgeInsetsGeometry",
                "isConst": false,
                "isFinal": false,
                "isNamed": true,
                "isOptional": true,
                "isPositional": false,
                "isRequired": false,
                "isRequiredPositional": false,
                "isSynthetic": false,
                "isRequiredNamed": false,
                "isOptionalNamed": true
              }
            ]
          }
        ],
        "methods": [
          {
            "name": "createState",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "_ExpansionTileState"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                }
              ]
            },
            "parameters": []
          }
        ],
        "tree": null
      },
      {
        "name": "_ExpansionTileState",
        "comments": [],
        "fields": [
          {
            "name": "_easeOutTween",
            "type": "Animatable<double>"
          },
          {
            "name": "_easeInTween",
            "type": "Animatable<double>"
          },
          {
            "name": "_halfTween",
            "type": "Animatable<double>"
          },
          {
            "name": "_borderColorTween",
            "type": "ColorTween"
          },
          {
            "name": "_headerColorTween",
            "type": "ColorTween"
          },
          {
            "name": "_iconColorTween",
            "type": "ColorTween"
          },
          {
            "name": "_backgroundColorTween",
            "type": "ColorTween"
          },
          {
            "name": "_controller",
            "type": "AnimationController"
          },
          {
            "name": "_iconTurns",
            "type": "Animation<double>"
          },
          {
            "name": "_heightFactor",
            "type": "Animation<double>"
          },
          {
            "name": "_borderColor",
            "type": "Animation<Color>"
          },
          {
            "name": "_headerColor",
            "type": "Animation<Color>"
          },
          {
            "name": "_iconColor",
            "type": "Animation<Color>"
          },
          {
            "name": "_backgroundColor",
            "type": "Animation<Color>"
          },
          {
            "name": "_isExpanded",
            "type": "bool"
          }
        ],
        "constructors": [],
        "methods": [
          {
            "name": "initState",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "void"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": [
                        {
                          "name": "if",
                          "values": [
                            {
                              "name": "name",
                              "props": {
                                "0": "_isExpanded"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "dispose",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "void"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": []
                    }
                  ]
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "_handleTap",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "void"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": [
                        {
                          "name": "if",
                          "values": [
                            {
                              "name": "binary",
                              "left": null,
                              "right": {
                                "name": "value",
                                "props": {
                                  "0": {
                                    "type": null,
                                    "value": "null"
                                  }
                                }
                              },
                              "operation": "!="
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "_buildChildren",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "Widget"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": [
                        {
                          "name": "return",
                          "values": [
                            {
                              "name": "constructor",
                              "value": "Container",
                              "arguments": {
                                "decoration": {
                                  "name": "constructor",
                                  "value": "BoxDecoration",
                                  "arguments": {
                                    "color": {
                                      "name": "binary",
                                      "left": null,
                                      "right": null,
                                      "operation": "??"
                                    },
                                    "border": {
                                      "name": "constructor",
                                      "value": "Border",
                                      "arguments": {
                                        "top": {
                                          "name": "constructor",
                                          "value": "BorderSide",
                                          "arguments": {
                                            "color": {
                                              "name": "name",
                                              "props": {
                                                "0": "borderSideColor"
                                              }
                                            }
                                          }
                                        },
                                        "bottom": {
                                          "name": "constructor",
                                          "value": "BorderSide",
                                          "arguments": {
                                            "color": {
                                              "name": "name",
                                              "props": {
                                                "0": "borderSideColor"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "child": {
                                  "name": "constructor",
                                  "value": "Column",
                                  "arguments": {
                                    "mainAxisSize": null,
                                    "children": {
                                      "name": "value",
                                      "props": {
                                        "0": {
                                          "type": "List",
                                          "value": "<Widget>[ListTileTheme.merge(iconColor: _iconColor.value, textColor: _headerColor.value, child: ListTile(onTap: _handleTap, contentPadding: widget.tilePadding, leading: widget.leading, title: widget.title, subtitle: widget.subtitle, trailing: widget.trailing ?? RotationTransition(turns: _iconTurns, child: const Icon(Icons.expand_more)))), ClipRect(child: Align(alignment: widget.expandedAlignment ?? Alignment.center, heightFactor: _heightFactor.value, child: child))]"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "didChangeDependencies",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "void"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": []
                    }
                  ]
                }
              ]
            },
            "parameters": []
          },
          {
            "name": "build",
            "body": {
              "name": "method_declaration",
              "values": [
                {
                  "name": "type",
                  "props": {
                    "0": "Widget"
                  }
                },
                {
                  "name": "declaration",
                  "values": []
                },
                {
                  "name": "block_body",
                  "values": [
                    {
                      "name": "block",
                      "values": [
                        {
                          "name": "return",
                          "values": [
                            {
                              "name": "constructor",
                              "value": "AnimatedBuilder",
                              "arguments": {
                                "animation": null,
                                "builder": {
                                  "name": "name",
                                  "props": {
                                    "0": "_buildChildren"
                                  }
                                },
                                "child": {
                                  "name": "conditional",
                                  "values": [
                                    {
                                      "name": "name",
                                      "props": {
                                        "0": "shouldRemoveChildren"
                                      }
                                    },
                                    {
                                      "name": "value",
                                      "props": {
                                        "0": {
                                          "type": null,
                                          "value": "null"
                                        }
                                      }
                                    },
                                    {
                                      "name": "name",
                                      "props": {
                                        "0": "result"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "parameters": []
          }
        ]
      }
    ],
    "enums": [],
    "fields": [
      {
        "name": "_kExpand",
        "type": "Duration"
      }
    ],
    "methods": []
  },
  "errors": []
}